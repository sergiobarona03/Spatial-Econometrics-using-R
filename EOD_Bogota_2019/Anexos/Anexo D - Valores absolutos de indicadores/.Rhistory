exp_sample <- data[c("Id_Hogar",
"Utam",
"id_rango_ingresos",
"Factor")]
exp_sample2 = exp_sample %>% mutate(value = 1)  %>% spread(id_rango_ingresos,
value,  fill = 0 )
exp_sample2[as.character(c(1:10))] = exp_sample2[as.character(c(1:10))]*exp_sample2$Factor
# Determinar la proporción de personas de nivel de ingresos bajos
ingresos = exp_sample2 %>% group_by(Utam) %>%
dplyr::summarize(ingresos_bajos = round(sum(c(`1`, `2`)), 0)/sum(c(`1`, `2`,
`3`, `4`,
`5`, `6`,
`7`, `8`,
`9`, `10`))*100
)
# Determinar el tamaño promedio de cada hogar por UTAM
size = data %>% group_by(Utam) %>%
dplyr::summarize(mean_size = weighted.mean(p7_total_personas,
Factor))
df_hogar = merge(ingresos, size, by = "Utam")
##################################################
## Construir data frame final para las personas ##------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##################################################
personas <- readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics Using R\\EOD_Bogota_2019\\Encuesta_de_Movilidad_2019\\Archivos XLSX\\PersonasEODH2019.xlsx")
hogar <- readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics Using R\\EOD_Bogota_2019\\Encuesta_de_Movilidad_2019\\Archivos XLSX\\HogaresEODH2019.xlsx")
########################################################
## Menor de edad: Aplicación de factores de expansión ##
########################################################
exp_sample <- personas[c("id_hogar",
"id_persona",
"p4_edad",
"f_exp")]
hogar <- read.csv("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics Using R\\EOD_Bogota_2019\\Encuesta_de_Movilidad_2019\\Archivos CSV\\HogaresEODH2019.csv")
hogar <- read.csv("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics Using R\\EOD_Bogota_2019\\Encuesta_de_Movilidad_2019\\Archivos_CSV\\HogaresEODH2019.csv")
##################################################
## Construir data frame final para las personas ##------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##################################################
personas <- read.csv("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics Using R\\EOD_Bogota_2019\\Encuesta_de_Movilidad_2019\\Archivos_CSV\\PersonasEODH2019.csv")
hogar <- read.csv("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics Using R\\EOD_Bogota_2019\\Encuesta_de_Movilidad_2019\\Archivos_CSV\\HogaresEODH2019.csv")
View(personas)
hogar <- read.csv("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics Using R\\EOD_Bogota_2019\\Encuesta_de_Movilidad_2019\\Archivos_CSV\\HogaresEODH2019.csv",
sep = ";")
########################################################
## Menor de edad: Aplicación de factores de expansión ##
########################################################
exp_sample <- personas[c("id_hogar",
"id_persona",
"p4_edad",
"f_exp")]
##################################################
## Construir data frame final para las personas ##------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##################################################
personas <- read.csv("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics Using R\\EOD_Bogota_2019\\Encuesta_de_Movilidad_2019\\Archivos_CSV\\PersonasEODH2019.csv",
sep = ";")
View(personas)
personas$p4_edad
########################################################
## Menor de edad: Aplicación de factores de expansión ##
########################################################
exp_sample <- personas[c("id_hogar",
"id_persona",
"p4_edad",
"f_exp")]
# Recuperar utam
exp_sample <- merge(exp_sample, hogar[c("Id_Hogar",
"Utam")],
by.x = "id_hogar", by.y = "Id_Hogar")
exp_sample$prop_menor <- NA
for (k in 1:nrow(exp_sample)) {
if(exp_sample$p4_edad[[k]] < 18){
exp_sample$prop_menor[[k]] = 1*exp_sample$f_exp[[k]]
}
}
age <- exp_sample %>% group_by(Utam) %>% dplyr::summarize(
minor = (sum(prop_menor, na.rm = T)/sum(f_exp))*100
)
##################################################################
### Proporción de ancianos: Aplicación de factores de expansión ##
##################################################################
exp_sample3 <- personas[c("id_hogar",
"id_persona",
"p4_edad",
"f_exp")]
# Recuperar utam
exp_sample3 <- merge(exp_sample3, hogar[c("Id_Hogar",
"Utam")],
by.x = "id_hogar", by.y = "Id_Hogar")
exp_sample3$prop_elder <- NA
for (k in 1:nrow(exp_sample3)) {
if(exp_sample3$p4_edad[[k]] > 65){
exp_sample3$prop_elder[[k]] = 1*exp_sample3$f_exp[[k]]
}
}
elder <- exp_sample3 %>% group_by(Utam) %>% dplyr::summarize(
elder = (sum(prop_elder, na.rm = T)/sum(f_exp))*100
)
###########################################################################
## Proporción de educación superior: Aplicación de factores de expansión ##
###########################################################################
exp_sample5 <- personas[c("id_hogar",
"id_persona",
"p11me_victima_agresion_viaje",
"f_exp")]
# Recuperar utam
exp_sample5 <- merge(exp_sample5, hogar[c("Id_Hogar",
"Utam")],
by.x = "id_hogar", by.y = "Id_Hogar")
exp_sample5$agresion <- NA
for (k in 1:nrow(exp_sample5)) {
if(exp_sample5$p11me_victima_agresion_viaje[[k]] %in% c(1)){
exp_sample5$agresion[[k]] = 1*exp_sample5$f_exp[[k]]
}
}
exp_sample5$noagresion <- NA
for (k in 1:nrow(exp_sample5)) {
if(exp_sample5$p11me_victima_agresion_viaje[[k]] %in% c(2)){
exp_sample5$noagresion[[k]] = 1*exp_sample5$f_exp[[k]]
}
}
exp_sample5$Utam = as.factor(exp_sample5$Utam)
agresion <- exp_sample5 %>% group_by(Utam) %>% dplyr::summarize(
agre = (sum(agresion, na.rm = T)/sum(noagresion, na.rm = T))*100
)
###########################################################################
## Proporción de educación superior: Aplicación de factores de expansión ##
###########################################################################
exp_sample6 <- personas[c("id_hogar",
"id_persona",
"p5_id_nivel_educativo",
"f_exp")]
# Recuperar utam
exp_sample6 <- merge(exp_sample6, hogar[c("Id_Hogar",
"Utam")],
by.x = "id_hogar", by.y = "Id_Hogar")
exp_sample6$higher <- NA
for (k in 1:nrow(exp_sample6)) {
if(exp_sample6$p5_id_nivel_educativo[[k]] %in% c(11,12,13)){
exp_sample6$higher[[k]] = 1*exp_sample6$f_exp[[k]]
}
}
higher <- exp_sample6 %>% group_by(Utam) %>% dplyr::summarize(
higher = (sum(higher, na.rm = T)/sum(f_exp))*100
)
df_personas_1 = merge(age, elder, by = "Utam")
df_personas_2 = merge(df_personas_1, agresion, by = "Utam")
df_personas_2 = merge(df_personas_2, higher, by = "Utam")
############################
## Base de datos completa ##
############################
input_dataset <- merge(df_hogar,
df_personas_2, by = "Utam")
View(input_dataset)
#########################################################
## Se recuperan indicadores sociodemográficos por UTAM ##
#########################################################
setwd("C:/Users/Portatil/Desktop/Spatial Econometrics Using R/EOD_Bogota_2019/Anexos/Anexo D - Valores absolutos de indicadores")
var_vector <- c("hogares","densidad",
"motorizacion",
"autos",
"motos",
"bicis")
sheet_vector <- c(4, 19, 41, 45,
49,53)
utam.list <- vector("list",
length = length(sheet_vector))
for (k in 1:length(sheet_vector)) {
data.aux <- readxl::read_excel("02_Anexo D_Socioeconomicos.xlsx",
sheet = sheet_vector[k],
range = cell_rows(10:300)) %>% na.omit()
colnames(data.aux)[1] = "Utam"
data.aux$Utam = toupper(data.aux$Utam)
utam.list[[k]] <- data.aux
names(utam.list)[k] <- var_vector[k]
input_dataset <- merge(input_dataset,
utam.list[[k]], by = "Utam",
all.x = T, all.y = T)
}
#####################################################
## Se recupera la variable dependiente por UTAM:   ##
##  Indicador de movilidad: tasa de viajes en SITM ##
#####################################################
setwd("C:/Users/Portatil/Desktop/Spatial Econometrics Using R/EOD_Bogota_2019/Anexos/Anexo D - Valores absolutos de indicadores")
tasa1 <-readxl::read_excel("03_Anexo D_Movilidad.xlsx",
sheet = 16,
range = cell_rows(10:300)) %>% na.omit()
colnames(tasa1)[1] = "Utam"
tasa1$Utam = toupper(tasa1$Utam)
tasa2 <-readxl::read_excel("03_Anexo D_Movilidad.xlsx",
sheet = 31,
range = cell_rows(10:300)) %>% na.omit()
colnames(tasa2)[1] = "Utam"
tasa2$Utam = toupper(tasa2$Utam)
# Añadir a dataset_input
input_dataset = merge(input_dataset,
tasa1, by = "Utam")
input_dataset = merge(input_dataset,
tasa2, by = "Utam")
setwd("C:/Users/Portatil/Desktop/Spatial Econometrics Using R/")
writexl::write_xlsx(input_dataset, "Final.input.dataset.xlsx")
#####################################################
## Se recupera la variable dependiente por UTAM:   ##
##  Indicador de movilidad: tasa de viajes en SITM ##
#####################################################
setwd("C:/Users/Portatil/Desktop/Spatial Econometrics Using R/EOD_Bogota_2019/Anexos/Anexo D - Valores absolutos de indicadores")
tasa1 <-readxl::read_excel("03_Anexo D_Movilidad.xlsx",
sheet = 16,
range = cell_rows(10:300)) %>% na.omit()
library(readxl)
tasa1 <-readxl::read_excel("03_Anexo D_Movilidad.xlsx",
sheet = 16,
range = cell_rows(10:300)) %>% na.omit()
colnames(tasa1)[1] = "Utam"
tasa1$Utam = toupper(tasa1$Utam)
tasa2 <-readxl::read_excel("03_Anexo D_Movilidad.xlsx",
sheet = 31,
range = cell_rows(10:300)) %>% na.omit()
colnames(tasa2)[1] = "Utam"
tasa2$Utam = toupper(tasa2$Utam)
# Añadir a dataset_input
input_dataset = merge(input_dataset,
tasa1, by = "Utam")
input_dataset = merge(input_dataset,
tasa2, by = "Utam")
View(input_dataset)
dataset = input_dataset
#---------------------------------------#
# Cargar datos y convertir en polígonos #
#---------------------------------------#
bg.sf <- read_sf(dsn=paste(getwd(),"/EOD_Bogota_2019/Zonificacion_shapefiles/ZONAS", sep = ""), layer="UTAM")
bg.sf <- st_zm(bg.sf)
bg.sf %>% head() %>% print(width = 120)
summary(bg.sf)
#View(bg)
# Convertir SpatialPolygonsDataFrame en data.frame
bg.df <- data.frame(bg.sf)
names(bg.df)           # Nombres de las variables
class(bg.df)           # Clase del objeto
summary(bg.df)         # Resumen descriptivo
bg_data <- bg.sf %>%
mutate(Utam = UTAM) %>%
left_join(dataset, by = "Utam") %>% na.omit()
# Remover área rual
bg_data <- bg_data %>% filter(!Utam %in%
c("UPR1",
"UPR2",
"UPR3") )
bg_data <- bg_data %>% filter(elder > 0, minor > 0, ingresos_bajos > 0,
higher > 0, agre > 0)
dataset_plot <- data.frame(bg_data)
# Revisión de las conexiones o links del shapefile
bg_data_test <- poly2nb(bg_data)
library(tidyverse)
library(spdep)
library(spatialreg)
library(classInt)
library(car)
library(lmtest)
library(sp)
library(spatstat)
library(RColorBrewer)
library(StatDA)
library(sf)
library(MASS)
library(ggpubr)
library(moments)
library(nortest)
library(ggpubr)
library(stargazer)
library(flextable)
# Revisión de las conexiones o links del shapefile
bg_data_test <- poly2nb(bg_data)
bg_data2 <- bg_data[-c(18),]
bg_data_gal <- poly2nb(bg_data2)
bg_data_gal <- poly2nb(bg_data2)
bgQ1.gal <- nb2listw(bg_data_gal)
bgQ1.gal <- nb2listw(bg_data_gal)
summary(bgQ1.gal)
# Definir data frame
bg.df <- data.frame(bg_data2)
# Cambiar el nombre de la variable dependiente
names(bg.df)[names(bg.df) == "Tasa.de.viajes.en.transporte.público.por.persona.al.día."] <- "Rate"
bg.df$Rate = as.numeric(bg.df$Rate)
summary(bg.df$Rate)
# Véase la información de los pesos de la matriz
names(attributes(bgQ1.gal))  # Nombres de los atributos
card(bgQ1.gal$neighbours)    # Número de vecinos para cada observación
range(card(bgQ1.gal$neighbours))  # Rango (número de vecinos)
1/rev(range(card(bgQ1.gal$neighbours))) # Rango (pesos)
summary(bgQ1.gal, zero.policy=T)   # Resumen
#
min(bg.df$Rate)      # 0.07728526
max(bg.df$Rate)      # 0.9365709
# - Rechazo o no?
moran.test(bg.df$Rate, bgQ1.gal, alternative="two.sided", zero.policy=T)
# Se presenta el mapa sobre  bg.df$Rate. Seleccionar la paleta
colors <- brewer.pal(5, "YlOrBr")
color.cat.reg<-classIntervals(bg.df$Rate, n=5, style="quantile", dataPrecision=2)
colcode <- findColours(color.cat.reg, colors)
## Figura
par(mfrow=c(1,1))
plot(bg_data[c("UTAM", "geometry")], col=colcode)
title('Tasa Viajes Trans. Pub. por día')
url <-  "https://systema59.dane.gov.co/redcol/CNPV2018/CNPV-2018_NBI.htm"
df <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table(fill = T)
library(tidyverse)
library(rvest)
df <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table(fill = T)
df
df <- url %>%
read_html() %>%
html_nodes("table")
df <- url %>%
read_html() %>%
html_nodes("table")
df
file.choose()
pob <- readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\Poblacion_CNPV2018.xlsx")
pob
pob$cod_dpto <- as.numeric(substr(pob$mun, 1, 2))
pob$cod_dpto
pob$mun
pob
pob$cod_mun <- as.numeric(substr(pob$mun, 3, 5))
pob
pob$cod <- as.numeric(substr(pob$mun, 1, 5))
pob
nchar(pob$mun)
pob$nom_mun <- as.character(substr(pob$mun, 7, nchar(pob$mun)))
pob
pob <- pob %>% select(cod_dpto, cod_mun, cod, nom_mun, n)
pob <- pob %>% dplyr::select(cod_dpto, cod_mun, cod, nom_mun, n)
pob
sum(pob$n)
writexl::write_xlsx(pob,
"C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\Pob_MUN_CNPV2018.xlsx")
# Departamentos
pob_dpto <- readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\Pob_MUN_CNPV2018.xlsx")
pob_dpto
nom_dpto <-  readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\NBI_DPTO_CNPV2018.xlsx")
nom_dpto
nom_dpto <-  readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\NBI_DPTO_CNPV2018.xlsx") %>%
select(cod, dpto)
nom_dpto <-  readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\NBI_DPTO_CNPV2018.xlsx") %>%
dplyr::select(cod, dpto)
nom_dpto
pob <- readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\Poblacion_CNPV2018.xlsx")
pob$cod_dpto <- as.numeric(substr(pob$mun, 1, 2))
pob$cod_mun <- as.numeric(substr(pob$mun, 3, 5))
pob$cod <- as.numeric(substr(pob$mun, 1, 5))
pob$nom_mun <- as.character(substr(pob$mun, 7, nchar(pob$mun)))
pob
nom_dpto <-  readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\NBI_DPTO_CNPV2018.xlsx") %>%
dplyr::select(cod, dpto) %>% rename(cod_dpto = cod)
nom_dpto
nom_dpto <-  readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\NBI_DPTO_CNPV2018.xlsx") %>%
dplyr::select(cod, dpto) %>% rename(cod_dpto = cod)
# Recuperar el nombre del departamento
pob <- pob %>% left_join(nom_dpto, by = "cod_dpto")
View(pob_dpto)
View(pob)
nom_dpto <-  readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\NBI_DPTO_CNPV2018.xlsx") %>%
dplyr::select(cod, dpto) %>% rename(cod_dpto = cod,
nom_dpto  = dpto)
pob <- readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\Poblacion_CNPV2018.xlsx")
pob$cod_dpto <- as.numeric(substr(pob$mun, 1, 2))
pob$cod_mun <- as.numeric(substr(pob$mun, 3, 5))
pob$cod <- as.numeric(substr(pob$mun, 1, 5))
pob$nom_mun <- as.character(substr(pob$mun, 7, nchar(pob$mun)))
# Recuperar el nombre del departamento
pob <- pob %>% left_join(nom_dpto, by = "cod_dpto")
pob <- pob %>% dplyr::select(cod_dpto, nom_dpto, cod_mun, cod, nom_mun, n)
head(pob)
writexl::write_xlsx(pob,
"C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\Pob_MUN_CNPV2018.xlsx")
# Departamentos
pob_dpto <- readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\Pob_MUN_CNPV2018.xlsx")
sum(pob_dpto$n)
pob_dpto <- pob_dpto %>% summarize(
cod_dpto = first(cod_dpto),
nom_dpto = first(nom_dpto),
n = sum(n, na.rm = T)
)
pob_dpto
# Departamentos
pob_dpto <- readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\Pob_MUN_CNPV2018.xlsx")
pob_dpto <- pob_dpto %>% group_by(cod_dpto) %>% summarize(
cod_dpto = first(cod_dpto),
nom_dpto = first(nom_dpto),
n = sum(n, na.rm = T)
)
pob_dpto
sum(pob_dpto$n)
writexl::write_xlsx(pob_dpto,
"C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\Pob_DPTO_CNPV2018.xlsx")
file.choose()
file.choose()
# Extensión de departamentos y municipios
st_read(dsn = "C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\SpatialData\\DANE_geodata\\",
layer = "MGN_ANM_MPIOS")
# Extensión de departamentos y municipios
mun_ext = st_read(dsn = "C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\SpatialData\\DANE_geodata\\",
layer = "MGN_ANM_MPIOS")
mun_ext
# Extensión de departamentos y municipios
mun_ext = st_read(dsn = "C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\SpatialData\\DANE_geodata\\",
layer = "MGN_ANM_MPIOS") %>% janitor::clean_names()
mun_ext
# Extensión de departamentos y municipios
mun_ext = st_read(dsn = "C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\SpatialData\\DANE_geodata\\",
layer = "MGN_ANM_MPIOS") %>% janitor::clean_names() %>%
select(dpto_ccdgo, mpio_ccdgo, mpio_cnmbr,
area)
mun_ext$area_km = mun_ext$area/1000
mun_ext
# Extensión de departamentos y municipios
mun_ext = st_read(dsn = "C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\SpatialData\\DANE_geodata\\",
layer = "MGN_ANM_MPIOS") %>% janitor::clean_names() %>%
select(dpto_ccdgo , mpio_ccdgo, mpio_cnmbr,
area)
# Extensión de departamentos y municipios
mun_ext = st_read(dsn = "C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\SpatialData\\DANE_geodata\\",
layer = "MGN_ANM_MPIOS") %>% janitor::clean_names() %>%
dplyr::select(dpto_ccdgo , mpio_ccdgo, mpio_cnmbr,
area)
mun_ext$area_km = mun_ext$area/1000
mun_ext$area_km = mun_ext$area/1000
mun_ext
# Área por departamento
dpto_ext = mun_ext %>% group_by(dpto_ccdgo) %>%
summarise(area_km = sum(area_km))
dpto_ext
View(dpto_ext)
# Extensión de departamentos y municipios
mun_ext = st_read(dsn = "C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\SpatialData\\DANE_geodata\\",
layer = "MGN_ANM_MPIOS") %>% janitor::clean_names() %>%
dplyr::select(dpto_ccdgo , mpio_ccdgo, mpio_cnmbr,
area) %>% as.data.frame()
mun_ext
mun_ext$area_km = mun_ext$area/1000
# Área por departamento
dpto_ext = mun_ext %>% group_by(dpto_ccdgo) %>%
summarise(area_km = sum(area_km))
dpto_ext
View(dpto_ext )
# Extensión de departamentos y municipios
mun_ext = st_read(dsn = "C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\SpatialData\\DANE_geodata\\",
layer = "MGN_ANM_MPIOS") %>% janitor::clean_names() %>%
dplyr::select(dpto_ccdgo , mpio_ccdgo, mpio_cnmbr,
area) %>% as.data.frame()
mun_ext$area
View(mun_ext)
View(mun_ext)
mun_ext$area_km = mun_ext$area/1000000
head(mun_ext)
# Área por departamento
dpto_ext = mun_ext %>% group_by(dpto_ccdgo) %>%
summarise(area_km = sum(area_km))
dpto_ext
# Área por departamento
dpto_ext = mun_ext %>% group_by(dpto_ccdgo) %>%
summarise(area_km = sum(area_km)) %>%
rename(cod_dpto = dpto_ccdgo)
dpto_ext
dpto_ext
dpto_ext$cod_dpto = as.numeric(dpto_ext$cod_dpto)
nom_dpto <-  readxl::read_excel("C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\NBI_DPTO_CNPV2018.xlsx") %>%
dplyr::select(cod, dpto) %>% rename(cod_dpto = cod,
nom_dpto  = dpto)
dpto_ext <- dpto_ext %>% left_join(nom_dpto, by = "cod_dpto")
dpto_ext
View(dpto_ext)
dpto_ext <- dpto_ext %>% select(cod_dpto, nom_dpto, area_km)
dpto_ext <- dpto_ext %>% dplyr::select(cod_dpto, nom_dpto, area_km)
dpto_ext
writexl::write_xlsx(dpto_ext,
"C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\AREA_DPTO_COL.xlsx")
head(mun_ext)
# Área por municipio
mun_ext <- mun_ext %>% select(dpto_ccdgo,
mpio_ccdgo,
mpio_cnmbr, area_km) %>%
rename(cod_dpto = dpto_ccdgo,
cod_mun = mpio_ccdgo,
nom_mun = mpio_cnmbr)
# Área por municipio
mun_ext <- mun_ext %>% dplyr::select(dpto_ccdgo,
mpio_ccdgo,
mpio_cnmbr, area_km) %>%
rename(cod_dpto = dpto_ccdgo,
cod_mun = mpio_ccdgo,
nom_mun = mpio_cnmbr)
mun_ext
mun_ext <- mun_ext %>% left_join(nom_dpto, by = "cod_dpto")
# Área por municipio
mun_ext <- mun_ext %>% dplyr::select(dpto_ccdgo,
mpio_ccdgo,
mpio_cnmbr, area_km) %>%
rename(cod_dpto = dpto_ccdgo,
cod_mun = mpio_ccdgo,
nom_mun = mpio_cnmbr)
mun_ext$cod_dpto = as.numeric(mun_ext$cod_dpto)
mun_ext <- mun_ext %>% left_join(nom_dpto, by = "cod_dpto")
mun_ext
View(mun_ext )
writexl::write_xlsx(mun_ext,
"C:\\Users\\Portatil\\Desktop\\Spatial Econometrics using R\\CNPV_2018\\AREA_MUN_COL.xlsx")
