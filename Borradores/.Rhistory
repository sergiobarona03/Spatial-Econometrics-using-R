tasa2, by = "Utam")
setwd("C:/Users/Portatil/Desktop/SpatialData/")
writexl::write_xlsx(input_dataset, "Final.input.dataset.xlsx")
View(input_dataset)
# Cargar la base de datos
dataset = readxl::read_excel("C:/Users/Portatil/Desktop/SpatialData/Final.input.dataset.xlsx")
dataset_plot <- bg.df %>%
mutate(Utam = Utam) %>%
left_join(dataset, by = "Utam")
bg.df
dataset_plot <- bg.df %>%
mutate(Utam = UTAM) %>%
left_join(dataset, by = "Utam")
head(dataset_plot)
View(dataset_plot)
colnames(dataset_plot)
# Figura 1A: densidad poblacional
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2")
f1a
class(dataset_plot)
class(bg.df)
dataset_plot <- bg %>%
mutate(Utam = UTAM) %>%
left_join(dataset, by = "Utam")
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2")
f1a
dataset_plot <- bg %>%
mutate(Utam = UTAM) %>%
left_join(dataset, by = "Utam") %>% na.omit()
# Figura 1A: densidad poblacional
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2")
f1a
colnames(dataset_plot)
# Figura 1A: densidad poblacional
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2")
# Figura 1b: tamaño promedio de los hogares
f1b <- dataset_plot %>% ggplot() +
aes(fill = mean_size) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Tamaño promedio del hogar")
# Figura 1c: Ingresos
f1c <- dataset_plot %>% ggplot() +
aes(fill = ingresos_bajos) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Ingresos bajos")
# Figura 1d: educación
f1d <- dataset_plot %>% ggplot() +
aes(fill = higher) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Nivel de educación superior")
f1a
f1b
f1c
f1d
levels(as.factor(dataset_plot$Utam))
# Remover área rual
dataset_plot <- dataset_plot %>% filter(!Utam %in%
c("UPR1",
"UPR2",
"UPR3"))
# Figura 1A: densidad poblacional
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2")
# Figura 1b: tamaño promedio de los hogares
f1b <- dataset_plot %>% ggplot() +
aes(fill = mean_size) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Tamaño promedio del hogar")
# Figura 1c: Ingresos
f1c <- dataset_plot %>% ggplot() +
aes(fill = ingresos_bajos) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Ingresos bajos")
# Figura 1d: educación
f1d <- dataset_plot %>% ggplot() +
aes(fill = higher) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Nivel de educación superior")
# Gráfica de los polígonos para variables independientes
# (densidad, tamaño, ingresos y educación)
ggarrange(f1a, f1b,
f1c, f1d, ncol = 2, nrow = 2)
library(ggpubr)
# Gráfica de los polígonos para variables independientes
# (densidad, tamaño, ingresos y educación)
ggarrange(f1a, f1b,
f1c, f1d, ncol = 2, nrow = 2)
# Gráfica de los polígonos para variables independientes
# (densidad, tamaño, ingresos y educación)
ggarrange(f1a, f1b,
f1c, f1d, ncol = 2, nrow = 2)+
theme(plot.margin = margin(0.1,0.1,2,0.1, "cm"))
# Gráfica de los polígonos para variables independientes
# (densidad, tamaño, ingresos y educación)
ggarrange(f1a, f1b,
f1c, f1d, ncol = 2, nrow = 2)+
theme(plot.margin = margin(0.01,0.01,0.01,0.01, "cm"))
# Figura 1A: densidad poblacional
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() +  coord_flip() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2")
f1a
# Figura 1A: densidad poblacional
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2") +  coord_flip()
f1a
# Figura 1A: densidad poblacional
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.15,0.88),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2")
f1a
# Gráfica de los polígonos para variables independientes
# (densidad, tamaño, ingresos y educación)
ggarrange(f1a, f1b,
f1c, f1d, ncol = 2, nrow = 1)
# Gráfica de los polígonos para variables independientes
# (densidad, tamaño, ingresos y educación)
ggarrange(f1a, f1b,
f1c, f1d, ncol = 4, nrow = 1)
"UPR3"))
# Figura 1A: densidad poblacional
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.7),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2")
# Figura 1b: tamaño promedio de los hogares
f1b <- dataset_plot %>% ggplot() +
aes(fill = mean_size) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.7),
legend.title = element_blank()) + labs(title =
"Tamaño promedio del hogar")
# Figura 1c: Ingresos
f1c <- dataset_plot %>% ggplot() +
aes(fill = ingresos_bajos) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.7),
legend.title = element_blank()) + labs(title =
"Ingresos bajos")
# Figura 1d: educación
f1d <- dataset_plot %>% ggplot() +
aes(fill = higher) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.7),
legend.title = element_blank()) + labs(title =
"Nivel de educación superior")
# Gráfica de los polígonos para variables independientes
# (densidad, tamaño, ingresos y educación)
ggarrange(f1a, f1b,
f1c, f1d, ncol = 4, nrow = 1)
# Figura 1A: densidad poblacional
f1a <- dataset_plot %>% ggplot() +
aes(fill = `Número de habitantes por Km2*`) +
geom_sf() + scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Número de habitantes por km2")
# Figura 1b: tamaño promedio de los hogares
f1b <- dataset_plot %>% ggplot() +
aes(fill = mean_size) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Tamaño promedio del hogar")
# Figura 1c: Ingresos
f1c <- dataset_plot %>% ggplot() +
aes(fill = ingresos_bajos) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Ingresos bajos")
# Figura 1d: educación
f1d <- dataset_plot %>% ggplot() +
aes(fill = higher) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::heat.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Nivel de educación superior")
# Gráfica de los polígonos para variables independientes
# (densidad, tamaño, ingresos y educación)
ggarrange(f1a, f1b,
f1c, f1d, ncol = 4, nrow = 1)
f2a <- dataset_plot %>% ggplot() +
aes(fill = higher) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::hcl.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Nivel de educación superior")
f2a
colnames(dataset_plot)
f2a <- dataset_plot %>% ggplot() +
aes(fill = `Tasa de viajes en transporte público por persona al día*`) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::hcl.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Tasa de viajes en transporte público
por persona al día")
f2b <- dataset_plot %>% ggplot() +
aes(fill = `Tasa de viajes en transporte público por persona que viaja al día*`) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::hcl.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Tasa de viajes en transporte público
por persona que viaja al día")
ggarrange(f2a, f2b, ncol = 2, nrow = 1)
f2a <- dataset_plot %>% ggplot() +
aes(fill = `Tasa de viajes en transporte público por persona al día*`) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::hcl.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Tasa de viajes en transporte público por persona al día")
f2b <- dataset_plot %>% ggplot() +
aes(fill = `Tasa de viajes en transporte público por persona que viaja al día*`) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::hcl.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Tasa de viajes en transporte público por persona que viaja al día")
ggarrange(f2a, f2b, ncol = 2, nrow = 1)
f2a <- dataset_plot %>% ggplot() +
aes(fill = `Tasa de viajes en transporte público por persona al día*`) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::hcl.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Tasa de viajes en SITP por persona al día")
f2b <- dataset_plot %>% ggplot() +
aes(fill = `Tasa de viajes en transporte público por persona que viaja al día*`) +
geom_sf() +  scale_fill_gradientn(colours = rev(
grDevices::hcl.colors(10)), name = NULL) + theme_bw() +
theme(legend.position = c(0.2,0.82),
legend.title = element_blank()) + labs(title =
"Tasa de viajes en SITP por persona que viaja al día")
ggarrange(f2a, f2b, ncol = 2, nrow = 1)
# Cambiar el nombre de la variable dependiente
dataset_plot = dataset_plot %>%
rename(Rate = `Tasa de viajes en transporte público por persona al día*`):
# Además de los histogramas con densidad normal,
# hay paquetes con funcionalidades flexibles (v.g. StatDA)
me = mean(log(Rate1000))
# Cambiar el nombre de la variable dependiente
dataset_plot = dataset_plot %>%
rename(Rate = `Tasa de viajes en transporte público por persona al día*`)
# Cambiar el nombre de la variable dependiente
dataset_plot = dataset_plot %>%
mutate(Rate = `Tasa de viajes en transporte público por persona al día*`)
dataset_plot
View(dataset_plot)
# Además de los histogramas con densidad normal,
# hay paquetes con funcionalidades flexibles (v.g. StatDA)
me = mean(log(Rate))
# Además de los histogramas con densidad normal,
# hay paquetes con funcionalidades flexibles (v.g. StatDA)
attach(dataset_plot)
me = mean(log(Rate))
sd = sd(log(Rate))
min(log(Rate))
max(log(Rate))
windows()
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-1,5, by = 0.15),
H.col="wheat", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-1, 5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate1000)",
P.xlab="log(Rate1000)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(log(Rate)), lwd=2, col='blue')
curve(dnorm(x, mean=me, sd=sd), from=-1, to=5, add=T,
col='red', lwd=3)
leg.txt <- c("   log(Rate1000)", "Min. =    -4.92",
"Max.=    -0.45", "Median =    -2.23",
"Mean =  -2.33", "Std. dev. =   0.93")
legend (x=-1, y=.7, bty="n", leg.txt)
hist(log(Rate))
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-3,0.5, by = 0.15),
H.col="wheat", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-1, 5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate)",
P.xlab="log(Rate)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
windows()
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-3,0.5, by = 0.15),
H.col="wheat", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-1, 5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate)",
P.xlab="log(Rate)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(log(Rate)), lwd=2, col='blue')
curve(dnorm(x, mean=me, sd=sd), from=-1, to=5, add=T,
col='red', lwd=3)
leg.txt <- c("   log(Rate)", "Min. =    -4.92",
"Max.=    -0.45", "Median =    -2.23",
"Mean =  -2.33", "Std. dev. =   0.93")
legend (x=-1, y=.7, bty="n", leg.txt)
windows()
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-3,0.5, by = 0.15),
H.col="wheat", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-1, 5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate)",
P.xlab="log(Rate)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(log(Rate)), lwd=2, col='blue')
curve(dnorm(x, mean=me, sd=sd), from=-3, to=0.5, add=T,
col='red', lwd=3)
leg.txt <- c("   log(Rate)", "Min. =    -4.92",
"Max.=    -0.45", "Median =    -2.23",
"Mean =  -2.33", "Std. dev. =   0.93")
legend (x=-1, y=.7, bty="n", leg.txt)
windows()
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-3,0.5, by = 0.15),
H.col="wheat", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-3, 0.5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate)",
P.xlab="log(Rate)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(log(Rate)), lwd=2, col='blue')
curve(dnorm(x, mean=me, sd=sd), from=-3, to=0.5, add=T,
col='red', lwd=3)
leg.txt <- c("   log(Rate)", "Min. =    -4.92",
"Max.=    -0.45", "Median =    -2.23",
"Mean =  -2.33", "Std. dev. =   0.93")
legend (x=-1, y=.7, bty="n", leg.txt)
windows()
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-3,0.5, by = 0.15),
H.col="wheat", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-3, 0.5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate)",
P.xlab="log(Rate)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(log(Rate)), lwd=2, col='blue')
curve(dnorm(x, mean=me, sd=sd), from=-3, to=0.5, add=T,
col='red', lwd=3)
leg.txt <- c("   log(Rate)", "Min. =    -4.92",
"Max.=    -0.45", "Median =    -2.23",
"Mean =  -2.33", "Std. dev. =   0.93")
legend (x=-2, y=1.3, bty="n", leg.txt)
windows()
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-3,0.5, by = 0.15),
H.col="wheat", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-3, 0.5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate)",
P.xlab="log(Rate)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(log(Rate)), lwd=2, col='blue')
curve(dnorm(x, mean=me, sd=sd), from=-3, to=0.5, add=T,
col='red', lwd=3)
leg.txt <- c("   log(Rate)", "Min. =    -4.92",
"Max.=    -0.45", "Median =    -2.23",
"Mean =  -2.33", "Std. dev. =   0.93")
legend (x=-2.5, y=1.3, bty="n", leg.txt)
me
max(log(Rate))
min(log(Rate))
median(log(Rate))
sd
windows()
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-3,0.5, by = 0.15),
H.col="wheat", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-3, 0.5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate)",
P.xlab="log(Rate)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(log(Rate)), lwd=2, col='blue')
curve(dnorm(x, mean=me, sd=sd), from=-3, to=0.5, add=T,
col='red', lwd=3)
leg.txt <- c("   log(Rate)", "Min. =    -2.5602",
"Max.=    0.0520", "Median =    -0.5016",
"Mean =  -0.5616", "Std. dev. =   0.3830")
legend (x=-2.5, y=1.3, bty="n", leg.txt)
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-3,0.5, by = 0.15),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-3, 0.5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate)",
P.xlab="log(Rate)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
windows()
StatDA::edaplot(log(Rate), scatter=TRUE, H.freq=FALSE, box=TRUE,
H.breaks=seq(-3,0.5, by = 0.15),
H.col="lightgray", H.border=TRUE, H.labels=FALSE,
S.pch=1, S.col="blue", S.cex=0.5,
D.lwd=2, D.lty=1, D.plot=FALSE,
P.xlim=c(-3, 0.5), P.cex.lab =1.2,
P.log=FALSE, P.main="Histogram, Density Plot, Scatterplot,
and Boxplot of log(Rate)",
P.xlab="log(Rate)", P.plot=TRUE,
P.ylab="Density",
B.pch=1,B.cex=0.5, B.col="red")
lines(density(log(Rate)), lwd=2, col='blue')
curve(dnorm(x, mean=me, sd=sd), from=-3, to=0.5, add=T,
col='red', lwd=3)
leg.txt <- c("   log(Rate)", "Min. =    -2.5602",
"Max.=    0.0520", "Median =    -0.5016",
"Mean =  -0.5616", "Std. dev. =   0.3830")
legend (x=-2.5, y=1.3, bty="n", leg.txt)
